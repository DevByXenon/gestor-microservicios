version: '3.8'

# Definici√≥n de servicios (contenedores)
services:

  # 1. Servicio para la base de datos MySQL
  mysql-db:
    image: mysql:8.0
    container_name: mysql-container
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
    ports:
      - "3307:3306"
    volumes:
      - mysql-data:/var/lib/mysql

    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - microservices-network

  # 2. Servicio para servidor Eureka
  eureka-server:
    build: ./eureka-server
    container_name: eureka-container
    ports:
      - "8761:8761"
    networks:
      - microservices-network

  # 3. Servicios de Negocio
  product-service:
    build: ./product-service
    container_name: product-container
    ports:
      - "8081:8081"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-container:3306/product_db?createDatabaseIfNotExist=true
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: rootpassword
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-container:8761/eureka/
    depends_on:
      mysql-db:
        condition: service_healthy
      eureka-server:
        condition: service_started
    networks:
      - microservices-network

  inventory-service:
    build: ./inventory-service
    container_name: inventory-container
    ports:
      - "8082:8082"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-container:3306/inventory_db?createDatabaseIfNotExist=true
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: rootpassword
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-container:8761/eureka/
    depends_on:
      mysql-db:
        condition: service_healthy
      eureka-server:
        condition: service_started
    networks:
      - microservices-network
      
  order-service:
    build: ./order-service
    container_name: order-container
    ports:
      - "8083:8083"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-container:3306/order_db?createDatabaseIfNotExist=true
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: rootpassword
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-container:8761/eureka/
    depends_on:
      mysql-db:
        condition: service_healthy
      eureka-server:
        condition: service_started
      product-service:
        condition: service_started
      inventory-service:
        condition: service_started
    networks:
      - microservices-network

  # 4. API Gateway
  api-gateway:
    build: ./api-gateway
    container_name: gateway-container
    ports:
      - "8080:8080"
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-container:8761/eureka/
    depends_on:
      eureka-server:
        condition: service_started
      product-service:
        condition: service_started
      inventory-service:
        condition: service_started
      order-service:
        condition: service_started
    networks:
      - microservices-network

volumes:
  mysql-data:

networks:
  microservices-network:
    driver: bridge